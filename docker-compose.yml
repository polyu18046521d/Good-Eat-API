version: "3.8"
services:
  reverse-proxy:
    image: nginx:1.17.10
    container_name: reverse_proxy
    depends_on:
      - auth
      # - store
      - restaurant-api
      # - menu
      # - order
    volumes:
      - ./reverse_proxy/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    networks:
      - api-gateway

  auth:
    image: project-auth-service
    container_name: project-auth-service
    build: ./auth
    ports:
      - 5000:5000
    networks:
      - api-gateway

  store-read-api:
    image: project-store-read-api
    container_name: project-store-read-api
    build: ./store/read
    volumes:
      - "./store/read:/code"
    environment:
      MONGO_SERVER_HOST: store-read-db
    depends_on:
      - store-read-db
      - rabbitmq
    ports:
      - 5001:5001
    networks:
      - queue
      - api-gateway
      - store-read-service
    restart: always
  
  store-read-db:
    image: mongo
    container_name: store-read-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: comp3122
      MONGO_INITDB_ROOT_PASSWORD: 12345
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./store/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - store-read-service

  menu-read-api:
    image: project-menu-read-api
    container_name: project-menu-read-api
    build: ./menu/read
    environment:
      MONGO_SERVER_HOST: menu-read-db
    depends_on:
      - menu-read-db
    ports:
      - 5002:5002
    networks:
      - queue
      - api-gateway
      - menu-read-service
    volumes:
      - ./menu/read:/code
    restart: always

  menu-read-db:
    image: mongo
    container_name: menu-read-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: comp3122
      MONGO_INITDB_ROOT_PASSWORD: 12345
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./menu/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - menu-read-service

  menu-write-api:
    image: project-menu-write-api
    container_name: project-menu-write-api
    build: ./menu/write
    volumes:
      - ./menu/write:/code
    ports:
      - 5003:5003
    networks:
      - queue
      - menu-write-service
    environment:
      MONGO_SERVER_HOST: menu-write-db
    depends_on:
      - rabbitmq
      - menu-write-db
    restart: always

  menu-write-db:
    image: mongo
    container_name: menu-write-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: comp3122
      MONGO_INITDB_ROOT_PASSWORD: 12345
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./menu/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - menu-write-service

  restaurant-api:
    image: project-restaurant-api
    container_name: project-restaurant-api
    build: ./restaurant
    volumes:
      - ./restaurant:/code
    ports:
      - 5004:5004
    networks:
      - api-gateway
      - queue
      - restaurant-service
    environment:
      MONGO_SERVER_HOST: restaurant-db
    depends_on:
      - rabbitmq
      - restaurant-db
    restart: always
  
  restaurant-db:
    image: mongo
    container_name: restaurant-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: comp3122
      MONGO_INITDB_ROOT_PASSWORD: 12345
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./restaurant/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - restaurant-service

  tracking-api:
    image: project-tracking-api
    container_name: project-tracking-api
    build: ./tracking
    volumes:
      - ./tracking:/code
    ports:
      - 5005:5005
    networks:
      - api-gateway
      - queue
      - tracking-service
    environment:
      MONGO_SERVER_HOST: tracking-db
    depends_on:
      - rabbitmq
      - tracking-db
    restart: always
  
  tracking-db:
    image: mongo
    container_name: tracking-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: comp3122
      MONGO_INITDB_ROOT_PASSWORD: 12345
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./tracking/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - tracking-service
    restart: always

  order-api:
    image: project-order-api
    container_name: project-order-api
    build: ./order
    volumes:
      - ./order:/code
    ports:
      - 5006:5006
    networks:
      - api-gateway
      - queue
      - order-service
    environment:
      MONGO_SERVER_HOST: order-db
    depends_on:
      - rabbitmq
      - order-db
    restart: always
  
  order-db:
    image: mongo
    container_name: order-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: comp3122
      MONGO_INITDB_ROOT_PASSWORD: 12345
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./order/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - order-service
    restart: always

  rabbitmq:
    image: rabbitmq
    networks:
      - queue

networks:
  queue:
    driver: bridge
  api-gateway:
    driver: bridge
  
  store-read-service:
    driver: bridge
  store-write-service:
    driver: bridge
  
  menu-read-service:
    driver: bridge
  menu-write-service:
    driver: bridge
  
  restaurant-service:
    driver: bridge

  tracking-service:
    driver: bridge

  order-service:
    driver: bridge